version: "3.9"

services:
  usersapi:
    image: usersapi
    build:
      context: src
      dockerfile: Services/Users/Users.API/Dockerfile
    ports:
      - "5000:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - POSTGRES_HOST=postgresUserdb
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=UserDb
    networks:
      - UserNetwork
      - LearnHubNetwork
    depends_on:
      - postgresUserdb

  notificationapi:
    image: notificationapi
    build:
      context: src
      dockerfile: Services/Notifications/Notification.API/Dockerfile
    ports:
      - "6000:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - POSTGRES_HOST=postgresNotificationdb
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=NotificationDb
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USERNAME=guest
      - RABBITMQ_PASSWORD=guest
    networks:
      - NotificationNetwork
      - LearnHubNetwork
    depends_on:
      - postgresNotificationdb
      - rabbitmq

  coursesapi:
    image: coursesapi
    build:
      context: src
      dockerfile: Services/Course/Course.API/Dockerfile
    ports:
      - "7000:8080"
    networks:
      - LearnHubNetwork
      - CourseNetwork
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - SQLSERVER_HOST=sqlserverCourse
      - SQLSERVER_PORT=1433
      - SQLSERVER_USER=sa
      - SQLSERVER_PASSWORD=AhmedAteya12348@
      - SQLSERVER_DATABASE=CourseDb
      - UsersServiceName=usersapi
      - UsersServicePort=8080
    depends_on:
       - sqlserverCourse
       - usersapi

  orderapi:
    image: orderapi
    build:
      context: src
      dockerfile: Services/Orders/Order.API/Dockerfile
    ports:
      - "8000:8080"
    networks:
      - LearnHubNetwork
      - OrderNetwork
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - SQLSERVER_HOST=sqlserverOrder
      - SQLSERVER_PORT=1433
      - SQLSERVER_USER=sa
      - SQLSERVER_PASSWORD=AhmedAteya12348@
      - SQLSERVER_DATABASE=OrderDb
    depends_on:
       - sqlserverOrder
       - usersapi

  sqlserverCourse:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver_course
    restart: always
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=AhmedAteya12348@
    ports:
      - "1433:1433"
    networks:
      - CourseNetwork
    volumes:
      - sqlserverCourse_data:/var/opt/mssql

  sqlserverOrder:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver_order
    restart: always
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=AhmedAteya12348@
    ports:
      - "1434:1433"  
    networks:
      - OrderNetwork
    volumes:
      - sqlserverOrder_data:/var/opt/mssql

  postgresUserdb:
    image: postgres:latest
    container_name: postgres_userdb
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: UserDb
    ports:
      - "5433:5432"
    networks:
      - UserNetwork
    volumes:
      - postgresUserdb:/var/lib/postgresql/data

  postgresNotificationdb:
    image: postgres:latest
    container_name: postgres_notificationdb
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: NotificationDb
    ports:
      - "5434:5432"
    networks:
      - NotificationNetwork
    volumes:
      - postgresNotificationdb:/var/lib/postgresql/data
  redis:
    image: redis:latest
    container_name: redis
    networks:
      - LearnHubNetwork
    ports:
      - "6379:6379"
  shoppingcart-api:
    image: shoppingcartapi
    build:
      context: src
      dockerfile: Services/Carts/Cart.API/Dockerfile
    container_name: shoppingcart-api
    networks:
      - LearnHubNetwork
    ports:
      - "9000:8080"
    depends_on:
      - redis
    environment:
      - ConnectionStrings__Redis=redis:6379
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"  
      - "15672:15672"
    networks:
      - LearnHubNetwork
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

volumes:
  postgresUserdb:
  postgresNotificationdb:
  rabbitmq_data:
  sqlserverCourse_data:
  sqlserverOrder_data:

networks:
  LearnHubNetwork:
    driver: bridge
  UserNetwork:
    driver: bridge
  NotificationNetwork:
    driver: bridge
  CourseNetwork:
    driver: bridge
  OrderNetwork:
    driver: bridge
